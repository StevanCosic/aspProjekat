// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PorjekatDataAccsess;

namespace PorjekatDataAccsess.Migrations
{
    [DbContext(typeof(ProjekatDbContext))]
    [Migration("20210616162609_freshMigration")]
    partial class freshMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjekatDomain.group", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("group");
                });

            modelBuilder.Entity("ProjekatDomain.markaKola", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("markaKola");
                });

            modelBuilder.Entity("ProjekatDomain.tip_auta", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("sedista")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("tip_auto");
                });

            modelBuilder.Entity("ProjekatDomain.useCaseLog", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("actor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("useCaseLog");
                });

            modelBuilder.Entity("ProjekatDomain.user", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Lname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("user");
                });

            modelBuilder.Entity("ProjekatDomain.userUseCase", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("UseCaseId")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("UserID");

                    b.ToTable("userUseCase");
                });

            modelBuilder.Entity("ProjekatDomain.vozac", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("phone")
                        .HasColumnType("int");

                    b.Property<int>("years")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("vozac");
                });

            modelBuilder.Entity("ProjekatDomain.voznja", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Tip_Autaid")
                        .HasColumnType("int");

                    b.Property<int?>("markaKolaid")
                        .HasColumnType("int");

                    b.Property<int?>("userid")
                        .HasColumnType("int");

                    b.Property<int?>("vozacid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Tip_Autaid");

                    b.HasIndex("markaKolaid");

                    b.HasIndex("userid");

                    b.HasIndex("vozacid");

                    b.ToTable("voznja");
                });

            modelBuilder.Entity("ProjekatDomain.userUseCase", b =>
                {
                    b.HasOne("ProjekatDomain.user", "user")
                        .WithMany("userUseCase")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("ProjekatDomain.voznja", b =>
                {
                    b.HasOne("ProjekatDomain.tip_auta", "Tip_Auta")
                        .WithMany("voznja")
                        .HasForeignKey("Tip_Autaid");

                    b.HasOne("ProjekatDomain.markaKola", "markaKola")
                        .WithMany("voznja")
                        .HasForeignKey("markaKolaid");

                    b.HasOne("ProjekatDomain.user", "user")
                        .WithMany()
                        .HasForeignKey("userid");

                    b.HasOne("ProjekatDomain.vozac", "vozac")
                        .WithMany("voznja")
                        .HasForeignKey("vozacid");

                    b.Navigation("markaKola");

                    b.Navigation("Tip_Auta");

                    b.Navigation("user");

                    b.Navigation("vozac");
                });

            modelBuilder.Entity("ProjekatDomain.markaKola", b =>
                {
                    b.Navigation("voznja");
                });

            modelBuilder.Entity("ProjekatDomain.tip_auta", b =>
                {
                    b.Navigation("voznja");
                });

            modelBuilder.Entity("ProjekatDomain.user", b =>
                {
                    b.Navigation("userUseCase");
                });

            modelBuilder.Entity("ProjekatDomain.vozac", b =>
                {
                    b.Navigation("voznja");
                });
#pragma warning restore 612, 618
        }
    }
}
